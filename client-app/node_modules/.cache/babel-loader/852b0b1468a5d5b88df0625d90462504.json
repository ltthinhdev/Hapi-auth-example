{"ast":null,"code":"const axios = require('axios');\n\nconst instance = axios.create({\n  baseURL: 'http://localhost:3000',\n  timeout: 1000,\n  contentType: 'application/json',\n  'X-Requested-With': 'XMLHttpRequest'\n});\nexport const getToken = () => {\n  sessionStorage.getItem('token');\n};\nexport const setToken = token => {\n  sessionStorage.setItem('token', token);\n};\nexport const getRequest = (url, params, token) => {\n  return instance.get(url, {\n    params: params,\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};\nexport const postRequest = (url, params, token) => {\n  return instance.post(url, {\n    params: params,\n    headers: {\n      Authorization: 'Bearer ' + token\n    }\n  });\n};","map":{"version":3,"sources":["/Users/compexmacpc/Documents/Auth-example/client-app/src/utilities/api.js"],"names":["axios","require","instance","create","baseURL","timeout","contentType","getToken","sessionStorage","getItem","setToken","token","setItem","getRequest","url","params","get","headers","Authorization","postRequest","post"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAE,uBADiB;AAE1BC,EAAAA,OAAO,EAAE,IAFiB;AAG1BC,EAAAA,WAAW,EAAE,kBAHa;AAI1B,sBAAoB;AAJM,CAAb,CAAjB;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1BC,EAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC/BH,EAAAA,cAAc,CAACI,OAAf,CAAuB,OAAvB,EAAgCD,KAAhC;AACH,CAFM;AAIP,OAAO,MAAME,UAAU,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcJ,KAAd,KAAwB;AAC9C,SAAOT,QAAQ,CAACc,GAAT,CAAaF,GAAb,EAAkB;AACrBC,IAAAA,MAAM,EAAEA,MADa;AAErBE,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,YAAYP;AADtB;AAFY,GAAlB,CAAP;AAMH,CAPM;AASP,OAAO,MAAMQ,WAAW,GAAG,CAACL,GAAD,EAAMC,MAAN,EAAcJ,KAAd,KAAwB;AAC/C,SAAOT,QAAQ,CAACkB,IAAT,CAAcN,GAAd,EAAmB;AACtBC,IAAAA,MAAM,EAAEA,MADc;AAEtBE,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,YAAYP;AADtB;AAFa,GAAnB,CAAP;AAMH,CAPM","sourcesContent":["const axios = require('axios');\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:3000',\n    timeout: 1000,\n    contentType: 'application/json',\n    'X-Requested-With': 'XMLHttpRequest'\n  });\n\nexport const getToken = () => {\n    sessionStorage.getItem('token');\n}\n\nexport const setToken = (token) => {\n    sessionStorage.setItem('token', token);\n}\n\nexport const getRequest = (url, params, token) => {\n    return instance.get(url, {\n        params: params,\n        headers: {\n            Authorization: 'Bearer ' + token\n        }\n    });\n}\n\nexport const postRequest = (url, params, token) => {\n    return instance.post(url, {\n        params: params,\n        headers: {\n            Authorization: 'Bearer ' + token\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}